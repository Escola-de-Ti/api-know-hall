#!/bin/bash
set -e

echo "üöÄ Iniciando setup do projeto KnowHall"

# 1. Verifica Java
if command -v java >/dev/null 2>&1; then
  JAVA_VERSION=$(java -version 2>&1 | head -n1 | sed -E 's/.*version "([0-9]+).*/\1/')
  if [ "$JAVA_VERSION" != "21" ]; then
    echo "‚ö†Ô∏è  Java $JAVA_VERSION detectado. Recomendado: 21"
  else
    echo "‚úÖ Java 21 detectado"
  fi
else
  echo "‚ùå Java n√£o encontrado no PATH. Instale Java 21 antes de continuar."
  exit 1
fi

# 2. Cria .env se n√£o existir
if [ ! -f .env ]; then
  if [ -f .env.example ]; then
    cp .env.example .env
    echo "‚úÖ Arquivo .env criado a partir de .env.example (ajuste os valores se necess√°rio)."
  else
    echo "‚ö†Ô∏è  .env.example n√£o encontrado; pule esta etapa."
  fi
else
  echo "‚ÑπÔ∏è  Arquivo .env j√° existe."
fi

# 3. Baixa depend√™ncias Maven offline
echo "üì¶ Baixando depend√™ncias Maven (offline cache)..."
./mvnw -q dependency:go-offline || echo "‚ö†Ô∏è  N√£o foi poss√≠vel preparar totalmente o cache offline (pode continuar)."

# 4. Instala depend√™ncias Node (se package.json existir e Node instalado)
if [ -f package.json ]; then
  if command -v node >/dev/null 2>&1; then
    echo "üì¶ Instalando depend√™ncias Node..."
    npm install --no-audit --no-fund
  else
    echo "‚ö†Ô∏è  Node n√£o encontrado; pulando instala√ß√£o de depend√™ncias JS (opcional)."
  fi
fi

# 5. Instala hooks
if [ -f install-hooks.sh ]; then
  bash install-hooks.sh
else
  echo "‚ö†Ô∏è  Script install-hooks.sh n√£o encontrado."
fi

# 6. Verifica√ß√£o r√°pida de build
echo "üîß Compilando para verifica√ß√£o r√°pida..."
./mvnw -q clean test -DskipTests || echo "‚ö†Ô∏è  Build encontrou problemas (verifique manualmente)."

echo "‚úÖ Setup conclu√≠do!"
echo "Pr√≥ximos passos:"
echo "  1. Ajuste o arquivo .env conforme necess√°rio"
echo "  2. Rode: ./mvnw spring-boot:run"
echo "  3. (Opcional) npm run format:check"

